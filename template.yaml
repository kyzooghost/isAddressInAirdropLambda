AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Lockdrop API

Transform:
- AWS::Serverless-2016-10-31

Resources:
  xsLockCache:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: xs-lock-cache-0

  LockdropTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: ethAddress
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  getLockdropDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/getLockdropData.getLockdropDataHandler
      Runtime: nodejs14.x
      FunctionName: getLockdropDataFunction
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A Lambda function takes an Ethereum address, returns relevant lockdrop data
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3ReadPolicy:
            BucketName: !Ref xsLockCache
        - DynamoDBReadPolicy:
            TableName: !Ref LockdropTable
      Environment:
        Variables:
          BUCKET: !Ref xsLockCache
          BUCKET_KEY: xsLockersCache.json
          TABLE: !Ref LockdropTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{address}
            Method: GET

  InsertLockdropChoiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/put-item.putItemHandler
      Runtime: nodejs14.x
      FunctionName: InsertLockdropChoiceFunction
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Lambda function to insert a single item into a DynamoDB table with {ethAddress, lockTime} entries. Invoked via HTTP POST request to API endpoint.
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref xsLockCache
        - DynamoDBCrudPolicy:
            TableName: !Ref LockdropTable
      Environment:
        Variables:
          BUCKET: !Ref xsLockCache
          BUCKET_KEY: xsLockersCache.json
          TABLE: !Ref LockdropTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST

  refreshXSLockCache:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/refreshXSLockCache.refreshXSLockCacheHandler
      Runtime: nodejs14.x
      FunctionName: refreshXSLockCache
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A Lambda function which refreshes the xsLock cache
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref xsLockCache
      Environment:
        Variables:
          BUCKET: !Ref xsLockCache
          BUCKET_KEY: xsLockersCache.json
      Events:
        InvocationLevel:
          Type: Schedule
          Properties:
            Schedule: cron(0/3 * * * ? *)

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage for isAddressInAirdrop lambda"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"